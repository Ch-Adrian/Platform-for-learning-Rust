{"cargoToml":"[package]\nname = \"main\"\nversion = \"0.1.0\"\nedition = \"2021\"\n\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n\n[dependencies]",
"prages":[{"sections":[{"titkhjle":"Pierwsza lekcja","cells":[{"profileType":"pl.edu.agh.backend.lesson.cells.TextCell","type":"TextCell","value":"# Zadanie rozgrzewkowe\n\nUzupełnij ciało funkcji `testFunc` która przyjmuje liczbę całkowitą i zwraca kwadrat tej liczby\n"},{"profileType":"pl.edu.agh.backend.lesson.cells.CodeCell","type":"CodeCell","value":"fn test_func(x: i32) -> i32 { \r\n    // TODO\r\n}\r\n\r\nfn main() {\r\n    println!(\"{}\", test_func(5));\r\n}\r\n","test":null,"reference":null},{"profileType":"pl.edu.agh.backend.lesson.cells.TextCell","type":"TextCell","value":"# Wadliwy kod\n\nPoniższy kawałek kodu nie kompiluje się. Uruchom kod i na podstawie zwracanego komunikatu, zastanów się co powoduje problem. Dokonuj korekty błędów, dopóki kompilator nie zwróci żadnego ostrzeżenia."},{"profileType":"pl.edu.agh.backend.lesson.cells.CodeCell","type":"CodeCell","value":"fn testFunc2(x: i32) -> i32 { \r\n    x - 0.536\r\n}\r\n\r\nfn main() {\r\n    println!(testFunc2(5));\r\n}","test":null,"reference":null},{"profileType":"pl.edu.agh.backend.lesson.cells.TextCell","type":"TextCell","value":"# Niemutowalny kod\n\nW poniższym kodzie możesz dokonywać zmian tylko w określonych miejscach. spróbuj tak zmodyfikować kod, aby funkcja `test_func3` przyjmowała liczbę całkowitą i zwracała jej wartość zmniejszoną o 5.  \nDo tego zadania dołączone są testy. Postaraj się, aby kod przechodził je wszystkie.\n\n"},{"profileType":"pl.edu.agh.backend.lesson.cells.ImmutableCodeCell","type":"ImmutableCodeCell","value":"fn test_func(/*TODO*/) -> /*TODO*/ { \r\n    /*TODO*/\r\n}\r\n\r\nfn main() {\r\n    println!(\"{}\", test_func(5));\r\n}","test":"#[test]\r\nfn test1() {\r\n    let result = 5;\r\n    assert_eq!(result, test_func(10));\r\n}\r\n\r\n\r\n#[test]\r\nfn test2() {\r\n    let result = -1;\r\n    assert_eq!(result, test_func(4));\r\n}\r\n\r\n#[test]\r\nfn test3() {\r\n    let result = -425;\r\n    assert_eq!(result, test_func(-420));\r\n}","reference":"fn test_func(/*TODO*/) -> /*TODO*/ { \r\n    /*TODO*/\r\n}\r\n\r\nfn main() {\r\n    println!(\"{}\", test_func(5));\r\n}","mutableString":"/*TODO*/"},{"profileType":"pl.edu.agh.backend.lesson.cells.QuizCell","type":"QuizCell","value":"To jest komórka typu quiz! W tym miejscu możesz wpisać pytanie.","answers":[{"id":1,"text":"Niepoprawna odpowiedz.","valid":false},{"id":2,"text":"Poprawna odpowiedz.","valid":true},{"id":3,"text":"Niepoprawna odpowiedz.","valid":false}]},{"profileType":"pl.edu.agh.backend.lesson.cells.TilesCell","type":"TilesCell","value":"To jest komórka typu kafelki!","tileMark":null,"tiles":[{"id":1,"text":"Jeden Kafelek"},{"id":2,"text":"Drugi Kafelek"},{"id":3,"text":"Trzeci Kaflek"}]}]}]}]}